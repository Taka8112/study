{
  "name": "jStat",
  "version": "1.2.0",
  "description": "Statistical Library for JavaScript",
  "homepage": "http://github.com/jstat/jstat",
  "main": "./dist/jstat.js",
  "author": {
    "name": "Trevor Norris",
    "email": "trev.norris@gmail.com",
    "url": "http://trevorjnorris.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/jstat/jstat.git"
  },
  "dependencies": {
    "uglify-js": "1.2.3",
    "vows": "https://github.com/flatiron/vows/archive/master.tar.gz"
  },
  "scripts": {
    "test": "./node_modules/vows/bin/vows --spec --isolate"
  },
  "readme": "[jStat](http://www.jstat.org/) - JavaScript Statistical Library\n===============================================================\n\nBuild Prerequisites\n-------------------\n\nIn order to build jStat, you need to have GNU make 3.8 or later, Node.js 0.2 or later, and git 1.7 or later.\n(Earlier versions might work OK, but are not tested.)\n\nWindows users have two options:\n\n1. Install [msysgit](https://code.google.com/p/msysgit/) (Full installer for official Git),\n   [GNU make for Windows](http://gnuwin32.sourceforge.net/packages/make.htm), and a\n   [binary version of Node.js](http://node-js.prcn.co.cc/). Make sure all three packages are installed to the same\n   location (by default, this is C:\\Program Files\\Git).\n2. Install [Cygwin](http://cygwin.com/) (make sure you install the git, make, and which packages), then either follow\n   the [Node.js build instructions](https://github.com/ry/node/wiki/Building-node.js-on-Cygwin-%28Windows%29) or install\n   the [binary version of Node.js](http://node-js.prcn.co.cc/).\n\nMac OS users should install Xcode (comes on your Mac OS install DVD, or downloadable from\n[Apple's Xcode site](http://developer.apple.com/technologies/xcode.html)) and\n[http://mxcl.github.com/homebrew/](Homebrew). Once Homebrew is installed, run `brew install git` to install git,\nand `brew install node` to install Node.js.\n\nLinux/BSD users should use their appropriate package managers to install make, git, and node, or build from source\nif you swing that way.\n\n\nBuilding jStat\n--------------\n\nFirst, clone a copy of the jStat git repo by running `git clone git://github.com/jstat/jstat.git`.\n\nTo download all necessary libraries run `npm install`.\n\nThen, to get a complete, minified version of jStat and all documentation, simply `cd` to the `jstat` directory and\ntype `make`. If you don't have Node installed and/or want to make a basic, uncompressed, unlinted version of jstat,\nuse `make jstat` instead of `make`.\n\nThe built version of jStat will be put in the `dist/` subdirectory.\n\nGenerate just the documentation by running `make doc`. Documentation will be placed in `dist/docs` by default.\n\nTo remove all built files, run `make clean`.\n\n\nRunning Tests\n-------------\n\nExecute all tests by running `make test`.\n\nOr if you wish to run a specific test, `cd` to `test/<subdir>` and run `node <some_test>-test.js`.\n\n\nGet the Code\n------------\n\nBoth the minified and unminified source are located in the `dist/` directory. For those who don't want to build\nit themselves.\n\n\nContribute\n----------\n\njStat is now going to follow most of the v8\n[JavaScript](http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml)\nguidelines. There will be plenty of source that uses the old style, but we're\ngoing to work away from that.\n\nAlso, we'll be going through and reimplementing a good portion of the code to\nrun faster. Hopefully it won't take too long to get the project on one basic\nstandard.\n\nWhen submitting pull requests, no need to check in dist/*.js. They'll be recompiled for distribution anyway.\n\nJoin the Community\n------------------\n\nWe always like discussion of how to improve jStat.\nJoin us at our [mailing list](http://groups.google.com/group/jstat-discuss/) and let us know what you'd like to see.\nAlso come ask questions in the #jstat channel on irc.freenode.net.\n\n\nCDN\n---\n\nThe library is hosted on [jsDelivr](http://www.jsdelivr.com/) using the follwing\nurl:\n```\n//cdn.jsdelivr.net/jstat/<version>/jstat.min.js\n```\n\nModule Loaders\n--------------\n\nCurrently jStat is exposed as `j$` and `jStat` inside an object, rather than\nexported directly. This may confuse some module loaders, however should be\neasily remedied with the correct configuration.\n\nNodeJS\n------\n\nWhen loading under Node be sure to reference the child object.\n```\nvar jStat = require('jStat').jStat;\n```\n\nRequireJS Shim\n--------------\n\nFor RequireJS not only `exports` but also `init` function must be specified.\n```\nrequirejs.config({\n  paths: {\n    'jstat': 'path/to/jstat/dist/jstat.min'\n  },\n  shim: {\n    jstat: {\n      exports: ['j$', 'jStat'],\n      init: function () {\n        return {\n          j$: j$,\n          jStat: jStat\n        };\n      }\n    }\n  }\n});\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "7ceb40bf0110cbcf2afb1217a4e55cc128806bc9",
  "bugs": {
    "url": "https://github.com/jstat/jstat/issues"
  },
  "_id": "jStat@1.2.0",
  "_shasum": "7f5eec8b6862d1dec8728090d3ca30e6f7f05231",
  "_from": "jStat",
  "_resolved": "file:jStat"
}
